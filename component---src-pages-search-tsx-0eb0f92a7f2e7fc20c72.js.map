{"version":3,"sources":["webpack:///./src/pages/search.tsx","webpack:///./src/components/PageItem/PageItem.tsx"],"names":["Search","componentWillMount","_this$props","this","props","searchIndex","setIndex","index","data","render","_this$props2","searchQuery","searchResults","edges","allPage","pages","map","result","find","edge","node","slug","ref","title","excerpt","react__WEBPACK_IMPORTED_MODULE_3__","_components_Layout_Layout__WEBPACK_IMPORTED_MODULE_11__","className","_components_MetaData_MetaData__WEBPACK_IMPORTED_MODULE_8__","noIndex","_components_Header_Header__WEBPACK_IMPORTED_MODULE_4__","_components_SubHeader_SubHeader__WEBPACK_IMPORTED_MODULE_5__","gatsby_link__WEBPACK_IMPORTED_MODULE_6___default","a","to","length","page","_components_PageItem_PageItem__WEBPACK_IMPORTED_MODULE_9__","key","React","query","connect","state","search","dispatch","setSearchIndex","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","n","PageItem","_ref"],"mappings":"0PA2CMA,oGACJC,8BAAqB,IAAAC,EAOfC,KAAKC,MALPC,EAFiBH,EAEjBG,YACAC,EAHiBJ,EAGjBI,SAEiBC,EALAL,EAIjBM,KACEH,YAAeE,MAGdF,GACHC,EAASC,MAIbE,kBAA0B,IAAAC,EAOpBP,KAAKC,MALPO,EAFsBD,EAEtBC,YACAC,EAHsBF,EAGtBE,cAEaC,EALSH,EAItBF,KACEM,QAAWD,MAITE,EAAQH,EACXI,IAAI,SAAAC,GACH,OAAOJ,EAAMK,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,OAASJ,EAAOK,QAErDN,IAAI,SAAAG,GAAI,OAAKA,EAAOA,EAAKC,KAAO,CAAEG,MAAO,GAAIF,KAAM,GAAIG,QAAS,MAEnE,OACEC,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,qBAAKE,UAAU,cACbF,EAAA,cAACG,EAAA,EAAD,CAAUL,MAAM,SAASM,SAAS,IAElCJ,EAAA,cAACK,EAAA,EAAD,MACAL,EAAA,cAACM,EAAA,EAAD,KACEN,EAAA,qBAAKE,UAAU,aACbF,EAAA,qBAAKE,UAAU,iBACbF,EAAA,qBAAKE,UAAU,2BACbF,EAAA,qBAAKE,UAAU,eACbF,EAAA,wBACEA,EAAA,cAACO,EAAAC,EAAD,CAAMC,GAAG,KAAT,mBAEFT,EAAA,uCAOVA,EAAA,qBAAKE,UAAU,aACbF,EAAA,qBAAKE,UAAU,0BACbF,EAAA,qBAAKE,UAAU,oCACbF,EAAA,6BACGV,EAAMoB,OAAS,EACdV,EAAA,yBACEA,EAAA,wCAAkBd,EAAlB,KACCI,EAAMC,IAAI,SAAAoB,GAAI,OACbX,EAAA,cAACY,EAAA,EAAD,CAAUC,IAAKF,EAAKf,KAAMe,KAAMA,OAIpCX,EAAA,4DAAsCd,EAAtC,eA9DC4B,iBA0ERC,EAAK,aA2BHC,sBAVS,SAACC,GAAD,MAA8B,CACpD/B,YAAa+B,EAAMC,OAAOhC,YAC1BN,YAAaqC,EAAMC,OAAOtC,YAC1BO,cAAe8B,EAAMC,OAAO/B,gBAGH,SAACgC,GAAD,MAAwC,CACjEtC,SAAU,SAACC,GAAD,OAAmBqC,EAASC,YAAetC,OAGxCkC,CAGbzC,qCCnJF,IAAA8C,EAAAC,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAAG,EAAAF,GAoBeG,IAbmC,SAAAC,GAAA,IAAGhB,EAAHgB,EAAGhB,KAAH,OAChDU,EAAA,qBAAKnB,UAAU,iBACbmB,EAAA,cAACG,EAAAhB,EAAD,CAAMC,GAAE,IAAME,EAAKf,MACjByB,EAAA,qBAAKnB,UAAU,OACbmB,EAAA,qBAAKnB,UAAU,kDACbmB,EAAA,wBAAKV,EAAKb,OACTa,EAAKZ","file":"component---src-pages-search-tsx-0eb0f92a7f2e7fc20c72.js","sourcesContent":["import * as React from 'react';\nimport Header from '../components/Header/Header';\nimport SubHeader from '../components/SubHeader/SubHeader';\nimport Link from 'gatsby-link';\nimport { setSearchIndex } from '../store/search/actions';\nimport MetaData from '../components/MetaData/MetaData';\nimport PageItem from '../components/PageItem/PageItem';\nimport { ApplicationState } from '../store';\nimport { connect } from 'react-redux';\nimport { SearchActions } from '../store/search/types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport { Dispatch } from 'redux';\n\ninterface OwnProps {\n  data: {\n    searchIndex: {\n      index: string;\n    };\n    allPage: {\n      edges: {\n        node: {\n          title: string;\n          slug: string;\n          excerpt: string;\n        };\n      }[];\n    };\n  };\n}\n\ninterface StateProps {\n  searchQuery: string;\n  searchIndex: string;\n  searchResults: { ref: string }[];\n}\n\ninterface DispatchProps {\n  setIndex(index: string): void;\n}\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nclass Search extends React.PureComponent<Props> {\n  componentWillMount() {\n    const {\n      searchIndex,\n      setIndex,\n      data: {\n        searchIndex: { index }\n      }\n    } = this.props;\n    if (!searchIndex) {\n      setIndex(index);\n    }\n  }\n\n  render(): React.ReactNode {\n    const {\n      searchQuery,\n      searchResults,\n      data: {\n        allPage: { edges }\n      }\n    } = this.props;\n\n    const pages = searchResults\n      .map(result => {\n        return edges.find(edge => edge.node.slug === result.ref);\n      })\n      .map(edge => (edge ? edge.node : { title: '', slug: '', excerpt: '' })); // Temporary workaround for a bug in Gatsby v2\n\n    return (\n      <Layout>\n        <div className=\"full-width\">\n          <MetaData title=\"Search\" noIndex={true} />\n\n          <Header />\n          <SubHeader>\n            <div className=\"container\">\n              <div className=\"row center-xs\">\n                <div className=\"col-xs-10 col-gutter-lr\">\n                  <div className=\"breadcrumbs\">\n                    <li>\n                      <Link to=\"/\">Knowledge Base</Link>\n                    </li>\n                    <li>Search</li>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </SubHeader>\n\n          <div className=\"container\">\n            <div className=\"category row center-xs\">\n              <div className=\"col-xs-10 col-md-6 col-gutter-lr\">\n                <section>\n                  {pages.length > 0 ? (\n                    <div>\n                      <h2>Results for \"{searchQuery}\"</h2>\n                      {pages.map(page => (\n                        <PageItem key={page.slug} page={page} />\n                      ))}\n                    </div>\n                  ) : (\n                    <h2>Sorry, there are no results for \"{searchQuery}\"</h2>\n                  )}\n                </section>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query SearchPage {\n    searchIndex {\n      index\n    }\n    allPage {\n      edges {\n        node {\n          title\n          slug\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  searchQuery: state.search.searchQuery,\n  searchIndex: state.search.searchIndex,\n  searchResults: state.search.searchResults\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<SearchActions>) => ({\n  setIndex: (index: string) => dispatch(setSearchIndex(index))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import * as React from 'react';\nimport Link from 'gatsby-link';\n\ninterface Props {\n  page: { title: string; slug: string; excerpt: string };\n}\n\nconst PageItem: React.StatelessComponent<Props> = ({ page }) => (\n  <div className=\"category-page\">\n    <Link to={`/${page.slug}`}>\n      <div className=\"row\">\n        <div className=\"category-page-description col-xs col-no-gutter\">\n          <h3>{page.title}</h3>\n          {page.excerpt}\n        </div>\n      </div>\n    </Link>\n  </div>\n);\n\nexport default PageItem;\n"],"sourceRoot":""}