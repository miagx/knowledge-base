{"version":3,"sources":["webpack:///./src/components/CategoryItem/CategoryItemCount/CategoryItemCount.tsx","webpack:///./src/components/SubCategoryItem/SubCategoryItem.tsx","webpack:///./src/templates/category.tsx","webpack:///./src/components/Breadcrumbs/Breadcrumbs.tsx","webpack:///./src/components/PageItem/PageItem.tsx"],"names":["CategoryItemCount","_ref","category","react","className","childrenPage","length","childrenCategory","SubCategoryItem","gatsby_link_default","a","to","slug","title","CategoryItem_CategoryItemCount_CategoryItemCount","__webpack_require__","d","__webpack_exports__","query","Category","_ref$data","data","site","subCategories","allCategory","pages","allPage","Layout","MetaData","description","Header","SubHeader","Breadcrumbs","breadcrumbs","edges","map","_ref2","subCategory","node","components_SubCategoryItem_SubCategoryItem","key","_ref3","page","PageItem","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","n","breadcrumb","excerpt"],"mappings":"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","file":"component---src-templates-category-tsx-fb2dad1e01261189f3e6.js","sourcesContent":["import * as React from 'react';\nimport { Category } from '../../../models/category';\n\ninterface Props {\n  category: Category;\n}\n\nconst CategoryItemCount: React.StatelessComponent<Props> = ({ category }) => (\n  <div className=\"category-article-count\">\n    {category.childrenPage &&\n      category.childrenPage.length > 0 && (\n        <>\n          {category.childrenPage.length} article\n          {category.childrenPage.length !== 1 && 's'}\n        </>\n      )}\n\n    {category.childrenCategory &&\n      category.childrenCategory.length > 0 && (\n        <>\n          {category.childrenPage.length > 0 && ', '}\n          {category.childrenCategory.length}{' '}\n          {(category.childrenCategory.length === 1 && 'category') || 'categories'}\n        </>\n      )}\n  </div>\n);\n\nexport default CategoryItemCount;\n","import * as React from 'react';\nimport Link from 'gatsby-link';\nimport { Category } from '../../models/category';\nimport CategoryItemCount from '../CategoryItem/CategoryItemCount/CategoryItemCount';\n\ninterface Props {\n  category: Category;\n}\n\nconst SubCategoryItem: React.StatelessComponent<Props> = ({ category }) => (\n  <div className=\"category-page\">\n    <Link to={`/${category.slug}`}>\n      <div className=\"row\">\n        <div className=\"category-page-description col-xs col-no-gutter\">\n          <h3>{category.title}</h3>\n          {/*{category.description}*/}\n          <CategoryItemCount category={category} />\n        </div>\n      </div>\n    </Link>\n  </div>\n);\n\nexport default SubCategoryItem;\n","import * as React from 'react';\nimport Header from '../components/Header/Header';\nimport SubHeader from '../components/SubHeader/SubHeader';\nimport { Category as CategoryData } from '../models/category';\nimport Breadcrumbs from '../components/Breadcrumbs/Breadcrumbs';\nimport PageItem from '../components/PageItem/PageItem';\nimport SubCategoryItem from '../components/SubCategoryItem/SubCategoryItem';\nimport { graphql } from 'gatsby';\nimport { Page } from '../models/page';\nimport MetaData from '../components/MetaData/MetaData';\nimport Layout from '../components/Layout/Layout';\n\ninterface Props {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    category: CategoryData;\n    allCategory: {\n      edges: {\n        node: CategoryData;\n      }[];\n    };\n    allPage: {\n      edges: {\n        node: Page;\n      }[];\n    };\n  };\n}\n\nconst Category: React.StatelessComponent<Props> = ({\n  data: { site, category, allCategory: subCategories, allPage: pages }\n}) => (\n  <Layout>\n    <div className=\"full-width\">\n      <MetaData title={category.title} description={category.description} />\n\n      <Header />\n      <SubHeader>\n        <div className=\"container\">\n          <div className=\"row center-xs\">\n            <div className=\"col-xs-10 col-gutter-lr\">\n              <Breadcrumbs breadcrumbs={category.breadcrumbs} />\n            </div>\n          </div>\n        </div>\n      </SubHeader>\n\n      <div className=\"container\">\n        <div className=\"category row center-xs\">\n          <div className=\"col-xs-10 col-md-6 col-gutter-lr\">\n            <section>\n              <h2>{category.title}</h2>\n              {subCategories && (\n                <>\n                  {subCategories.edges.map(({ node: subCategory }) => (\n                    <SubCategoryItem key={subCategory.slug} category={subCategory} />\n                  ))}\n                  {pages && <hr />}\n                </>\n              )}\n              {pages &&\n                pages.edges.map(({ node: page }) => <PageItem key={page.slug} page={page} />)}\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport const query = graphql`\n  query Category($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    category(slug: { eq: $slug }) {\n      title\n      slug\n      description\n      childrenCategory {\n        title\n        slug\n        description\n      }\n      breadcrumbs {\n        title\n        slug\n      }\n    }\n    allCategory(filter: { parentSlug: { eq: $slug } }, sort: { fields: [priority], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          description\n          childrenPage {\n            title\n          }\n        }\n      }\n    }\n    allPage(filter: { parentSlug: { eq: $slug } }, sort: { fields: [priority], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          excerpt\n        }\n      }\n    }\n  }\n`;\n\nexport default Category;\n","import * as React from 'react';\nimport { Breadcrumb } from '../../models/breadcrumb';\nimport Link from 'gatsby-link';\n\ninterface Props {\n  breadcrumbs: Breadcrumb[];\n}\n\nconst Breadcrumbs: React.StatelessComponent<Props> = ({ breadcrumbs }) => (\n  <ul className=\"breadcrumbs\">\n    <li>\n      <Link to=\"/\">Knowledge Base</Link>\n    </li>\n    {breadcrumbs.map(breadcrumb => (\n      <li key={breadcrumb.title}>\n        <Link to={`/${breadcrumb.slug}`}>{breadcrumb.title}</Link>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Breadcrumbs;\n","import * as React from 'react';\nimport Link from 'gatsby-link';\n\ninterface Props {\n  page: { title: string; slug: string; excerpt: string };\n}\n\nconst PageItem: React.StatelessComponent<Props> = ({ page }) => (\n  <div className=\"category-page\">\n    <Link to={`/${page.slug}`}>\n      <div className=\"row\">\n        <div className=\"category-page-description col-xs col-no-gutter\">\n          <h3>{page.title}</h3>\n          {page.excerpt}\n        </div>\n      </div>\n    </Link>\n  </div>\n);\n\nexport default PageItem;\n"],"sourceRoot":""}