{"version":3,"sources":["webpack:///./src/components/ContactForm/ContactForm.tsx","webpack:///./src/pages/contact-us.tsx"],"names":["schema","object","shape","name","string","required","email","address","matches","subject","min","body","attachment","ContactForm","props","_this","_React$PureComponent","call","this","state","formData","errors","isVerified","handleChange","bind","assertThisInitialized_default","handleVerify","handleExpired","handleSubmit","render","_this2","react","method","encType","acceptCharset","action","onSubmit","className","includes","type","value","onChange","placeholder","htmlFor","id","accept","gatsby_browser_entry","query","data","es","sitekey","site","siteMetadata","recaptchaSitekey","onExpired","_3368468524","event","_Object$assign","setState","Object","assign","target","filter","error","_this3","preventDefault","form","currentTarget","_this$state","validate","abortEarly","then","submit","catch","concat","inner","map","innerError","path","React","ContactUs","Layout","MetaData","title","Header","SubHeader","gatsby_link_default","a","to","href","rel","ContactForm_ContactForm"],"mappings":"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","file":"component---src-pages-contact-us-tsx-d18561f36becf97e39bf.js","sourcesContent":["import * as React from 'react';\nimport Recaptcha from 'react-google-recaptcha';\nimport { object, string, ValidationError } from 'yup';\nimport { graphql, StaticQuery } from 'gatsby';\n\ninterface State {\n  formData: {\n    name: string;\n    email: string;\n    address: string;\n    subject: string;\n    body: string;\n    attachment: string;\n  };\n  errors: string[];\n  isVerified: boolean;\n}\n\nconst schema = object().shape({\n  name: string().required(),\n  email: string()\n    .email()\n    .required(),\n  address: string().matches(/^(?:0x[a-fA-F0-9]{40})?$/),\n  subject: string()\n    .min(1)\n    .required(),\n  body: string().required(),\n  attachment: string()\n});\n\nexport default class ContactForm extends React.PureComponent<{}, State> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      formData: {\n        name: '',\n        email: '',\n        address: '',\n        subject: '',\n        body: '',\n        attachment: ''\n      },\n      errors: [],\n      isVerified: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleVerify = this.handleVerify.bind(this);\n    this.handleExpired = this.handleExpired.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <form\n        method=\"post\"\n        encType=\"multipart/form-data\"\n        acceptCharset=\"utf-8\"\n        action=\"https://webhook.frontapp.com/forms/myetherwallet/tMA_4BxSeE05bwxsN62-Ue5xP4jz_W7LGlgKNgGTKEchjFw7-6M8q-9q9ZqxsSYDl2BXv7Gx17Vqev1Km0akl8qVZtPM5LYl\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className={`field full-width ${errors.includes('name') ? 'error' : ''}`}>\n          <label>Your name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.formData.name}\n            onChange={this.handleChange}\n            placeholder=\"e.g. Taylor\"\n          />\n        </div>\n\n        <div className={`field full-width ${errors.includes('email') ? 'error' : ''}`}>\n          <label htmlFor=\"form-email\">Your email</label>\n          <input\n            type=\"text\"\n            id=\"form-email\"\n            name=\"email\"\n            value={this.state.formData.email}\n            onChange={this.handleChange}\n            placeholder=\"e.g. support@mycrypto.com\"\n          />\n        </div>\n\n        <div className={`field full-width ${errors.includes('address') ? 'error' : ''}`}>\n          <label htmlFor=\"form-address\">Your Ethereum address</label>\n          <input\n            type=\"text\"\n            id=\"form-address\"\n            name=\"address\"\n            value={this.state.formData.address}\n            onChange={this.handleChange}\n            placeholder=\"e.g. 0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520\"\n          />\n        </div>\n\n        <div className={`field full-width ${errors.includes('subject') ? 'error' : ''}`}>\n          <label htmlFor=\"form-subject\">Subject</label>\n          <select\n            id=\"form-subject\"\n            name=\"subject\"\n            value={this.state.formData.subject}\n            onChange={this.handleChange}\n          >\n            <option value=\"\">What can we help you with?</option>\n            <option>Accessing wallet</option>\n            <option>Adding tokens</option>\n            <option>Coinbase buy widget</option>\n            <option>ENS</option>\n            <option>Exchanging / exchanges</option>\n            <option>Getting started</option>\n            <option>Keystore file</option>\n            <option>Ledger or TREZOR</option>\n            <option>Lost ETH / phishing / scam</option>\n            <option>Lost password</option>\n            <option>Lost private key</option>\n            <option>MetaMask</option>\n            <option>Nodes / networks</option>\n            <option>Private key</option>\n            <option>Sending transactions</option>\n            <option>Sending tokens</option>\n            <option>Swap</option>\n            <option>Other</option>\n          </select>\n        </div>\n\n        <div className={`field full-width ${errors.includes('body') ? 'error' : ''}`}>\n          <label htmlFor=\"form-body\">More details</label>\n          <p>\n            Please include all the necessary info, so that we can help you. Not doing so may cause\n            delays. <strong>Do not send us your private key.</strong>\n          </p>\n          <textarea\n            id=\"form-body\"\n            name=\"body\"\n            value={this.state.formData.body}\n            onChange={this.handleChange}\n            placeholder=\"e.g. I was attempting to unlock by wallet but when I did I got the error message &quot;Unknown Error: file is not defined.&quot; ...\"\n          />\n        </div>\n\n        <div className={`field full-width ${errors.includes('attachment') ? 'error' : ''}`}>\n          <label htmlFor=\"form-attachment\">Screenshot</label>\n          <p>\n            Image files only. Do not send your private key or passport. Do not send a screenshot of\n            your transaction history, but include a link instead.\n          </p>\n          <input\n            type=\"file\"\n            id=\"form-attachment\"\n            name=\"attachment\"\n            accept=\"image/x-png,image/gif,image/jpeg\"\n            value={this.state.formData.attachment}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"field full-width\">\n          <label>Captcha</label>\n          <p>Sorry, we just need to make sure you are human.</p>\n          <StaticQuery\n            query={graphql`\n              query SiteKey {\n                site {\n                  siteMetadata {\n                    recaptchaSitekey\n                  }\n                }\n              }\n            `}\n            render={data => (\n              <Recaptcha\n                sitekey={data.site.siteMetadata.recaptchaSitekey}\n                onChange={this.handleVerify}\n                onExpired={this.handleExpired}\n              />\n            )}\n          />\n          {errors.includes('captcha') ? <p>Please complete the captcha.</p> : null}\n        </div>\n\n        <input type=\"submit\" value=\"Send message\" className=\"button primary\" />\n      </form>\n    );\n  }\n\n  handleChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n  ) {\n    this.setState({\n      formData: {\n        ...this.state.formData,\n        [event.target.name]: event.target.value\n      }\n    });\n\n    if (this.state.errors.includes(event.target.name)) {\n      this.setState({\n        errors: this.state.errors.filter(error => error !== event.target.name)\n      });\n    }\n  }\n\n  handleVerify() {\n    this.setState({\n      isVerified: true\n    });\n\n    this.setState({\n      errors: this.state.errors.filter(error => error !== 'captcha')\n    });\n  }\n\n  handleExpired() {\n    this.setState({\n      isVerified: false\n    });\n  }\n\n  handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const { formData, isVerified } = this.state;\n\n    if (!isVerified) {\n      this.setState({\n        errors: ['captcha']\n      });\n    }\n\n    schema\n      .validate(formData, { abortEarly: false })\n      .then(() => {\n        form.submit();\n      })\n      .catch((error: ValidationError) => {\n        this.setState({\n          errors: [...this.state.errors, ...error.inner.map(innerError => innerError.path)]\n        });\n      });\n  }\n}\n","import * as React from 'react';\nimport Layout from '../components/Layout/Layout';\nimport MetaData from '../components/MetaData/MetaData';\nimport Header from '../components/Header/Header';\nimport SubHeader from '../components/SubHeader/SubHeader';\nimport Link from 'gatsby-link';\nimport ContactForm from '../components/ContactForm/ContactForm';\n\nconst ContactUs: React.StatelessComponent = () => (\n  <Layout>\n    <div className=\"full-width\">\n      <MetaData title=\"Contact us\" />\n\n      <Header />\n      <SubHeader>\n        <div className=\"container\">\n          <div className=\"row center-xs\">\n            <div className=\"col-xs-10 col-gutter-lr\">\n              <div className=\"breadcrumbs\">\n                <li>\n                  <Link to=\"/\">Knowledge Base</Link>\n                </li>\n                <li>Contact us</li>\n              </div>\n            </div>\n          </div>\n        </div>\n      </SubHeader>\n\n      <div className=\"container\">\n        <div className=\"category row center-xs\">\n          <div className=\"col-xs-10 col-md-6 col-gutter-lr\">\n            <section>\n              <h2>Contact us</h2>\n              <p>\n                Before you send us a message, please try searching the knowledge base first or try{' '}\n                <Link to=\"/general-knowledge/ethereum-blockchain/more-help-support-and-communities\">\n                  this list of communities\n                </Link>{' '}\n                for more immediate help.\n              </p>\n              <p>\n                Your information will be used only to improve our pages and to answer you. Your data\n                will be processed by us, our hosting provider, and our support ticket provider. For\n                more information have a look at our{' '}\n                <a\n                  href=\"https://about.mycrypto.com/privacy/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  privacy policy\n                </a>\n                .\n              </p>\n              <ContactForm />\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default ContactUs;\n"],"sourceRoot":""}